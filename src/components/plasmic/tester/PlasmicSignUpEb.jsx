// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8SHiPo3YzQEpf2K1Z1JiAP
// Component: p24vjffSS5u
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import TextInput from "../../TextInput"; // plasmic-import: 3VlgngjEZhC/component
import { useScreenVariants as useScreenVariantszDahPczOh1KR } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: zDAHPczOh1K_r/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_tester.module.css"; // plasmic-import: 8SHiPo3YzQEpf2K1Z1JiAP/projectcss
import sty from "./PlasmicSignUpEb.module.css"; // plasmic-import: p24vjffSS5u/css
import landingImg2JpegG5Mpe5Qm from "./images/landingImg2Jpeg.jpeg"; // plasmic-import: g5MPE5qm_/picture
import loginImg2KaTm6W9Xk from "./images/loginImg2.jpeg"; // plasmic-import: KATm6W9Xk/picture

export const PlasmicSignUpEb__VariantProps = new Array();

export const PlasmicSignUpEb__ArgProps = new Array();

function PlasmicSignUpEb__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantszDahPczOh1KR()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"mainSection"}
            data-plasmic-override={overrides.mainSection}
            className={classNames(projectcss.all, sty.mainSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__ugYy8)}>
              <div className={classNames(projectcss.all, sty.freeBox__uJoka)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4MmoI)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__unuOf)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fpa55
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__tMmJr
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                projectcss.__wab_text,
                                sty.h1__zkT2C
                              )}
                            >
                              {"Event Buddy"}
                            </h1>
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </h1>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"a"}
                      data-plasmic-name={"loginLink"}
                      data-plasmic-override={overrides.loginLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.loginLink
                      )}
                      href={"/login"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cWvbZ
                        )}
                      >
                        {"Login"}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"pageBanner"}
              data-plasmic-override={overrides.pageBanner}
              className={classNames(projectcss.all, sty.pageBanner)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__lzTz1)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__tNchE)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__imrH1)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4NiQ2
                      )}
                    >
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__fWdT
                        )}
                      >
                        {"Welcome - Please Sign Up"}
                      </h1>
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__vmar3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___1Cse3)}
                      displayHeight={"401px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: landingImg2JpegG5Mpe5Qm,
                        fullWidth: 275,
                        fullHeight: 183,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"mainSection2"}
              data-plasmic-override={overrides.mainSection2}
              className={classNames(projectcss.all, sty.mainSection2)}
            >
              <div className={classNames(projectcss.all, sty.columns__cUfvT)}>
                <div className={classNames(projectcss.all, sty.column___0BxMt)}>
                  <div
                    data-plasmic-name={"container4"}
                    data-plasmic-override={overrides.container4}
                    className={classNames(projectcss.all, sty.container4)}
                  >
                    <h2
                      data-plasmic-name={"h2"}
                      data-plasmic-override={overrides.h2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2
                      )}
                    >
                      {"Login"}
                    </h2>

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__sLns
                      )}
                    >
                      {"Email"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpEmail"}
                      data-plasmic-override={overrides.signUpEmail}
                      className={classNames("__wab_instance", sty.signUpEmail)}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__gNWqU
                      )}
                    >
                      {"First Name"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpFirstName"}
                      data-plasmic-override={overrides.signUpFirstName}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpFirstName
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__gQpnv
                      )}
                    >
                      {"Last Name"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpLastName"}
                      data-plasmic-override={overrides.signUpLastName}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpLastName
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__uUh0M
                      )}
                    >
                      {"Username"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpLastName2"}
                      data-plasmic-override={overrides.signUpLastName2}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpLastName2
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__utkiW
                      )}
                    >
                      {"Date of Birth"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpDateOfBirth"}
                      data-plasmic-override={overrides.signUpDateOfBirth}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpDateOfBirth
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__nWkvy
                      )}
                    >
                      {"Postal Code"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpPostalCode"}
                      data-plasmic-override={overrides.signUpPostalCode}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpPostalCode
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__kwoWp
                      )}
                    >
                      {"Phone  Number"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpPhoneNumber"}
                      data-plasmic-override={overrides.signUpPhoneNumber}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpPhoneNumber
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__pSg0R
                      )}
                    >
                      {"Password"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpPassword"}
                      data-plasmic-override={overrides.signUpPassword}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpPassword
                      )}
                      placeholder={" "}
                    />

                    <label
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label__stt9E
                      )}
                    >
                      {"Re-Enter Password"}
                    </label>

                    <TextInput
                      data-plasmic-name={"signUpPasswordCheck"}
                      data-plasmic-override={overrides.signUpPasswordCheck}
                      className={classNames(
                        "__wab_instance",
                        sty.signUpPasswordCheck
                      )}
                      placeholder={" "}
                    />

                    <p.Stack
                      as={"button"}
                      data-plasmic-name={"loginConfirmation"}
                      data-plasmic-override={overrides.loginConfirmation}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        sty.loginConfirmation
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__r6XlV
                        )}
                      >
                        {"Confirm"}
                      </div>
                    </p.Stack>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__j5O4N)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cYmRu)}
                    displayHeight={"416px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: loginImg2KaTm6W9Xk,
                      fullWidth: 245,
                      fullHeight: 206,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__utUp)}>
              <div className={classNames(projectcss.all, sty.columns__gFZhc)}>
                <div className={classNames(projectcss.all, sty.column___8LXS)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yhN0
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{
                          color: "#040404",
                          textDecorationLine: "underline"
                        }}
                      >
                        {"Contact Us"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__a1Vgg)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rpVLk
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#040404" }}
                      >
                        {"@ 2022 Event Buddy"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__sEsX9)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cbIam
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{
                          color: "#040404",
                          textDecorationLine: "underline"
                        }}
                      >
                        {"Learn More"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "mainSection",
    "loginLink",
    "pageBanner",
    "mainSection2",
    "container4",
    "h2",
    "signUpEmail",
    "signUpFirstName",
    "signUpLastName",
    "signUpLastName2",
    "signUpDateOfBirth",
    "signUpPostalCode",
    "signUpPhoneNumber",
    "signUpPassword",
    "signUpPasswordCheck",
    "loginConfirmation"
  ],

  mainSection: [
    "mainSection",
    "loginLink",
    "pageBanner",
    "mainSection2",
    "container4",
    "h2",
    "signUpEmail",
    "signUpFirstName",
    "signUpLastName",
    "signUpLastName2",
    "signUpDateOfBirth",
    "signUpPostalCode",
    "signUpPhoneNumber",
    "signUpPassword",
    "signUpPasswordCheck",
    "loginConfirmation"
  ],

  loginLink: ["loginLink"],
  pageBanner: ["pageBanner"],
  mainSection2: [
    "mainSection2",
    "container4",
    "h2",
    "signUpEmail",
    "signUpFirstName",
    "signUpLastName",
    "signUpLastName2",
    "signUpDateOfBirth",
    "signUpPostalCode",
    "signUpPhoneNumber",
    "signUpPassword",
    "signUpPasswordCheck",
    "loginConfirmation"
  ],

  container4: [
    "container4",
    "h2",
    "signUpEmail",
    "signUpFirstName",
    "signUpLastName",
    "signUpLastName2",
    "signUpDateOfBirth",
    "signUpPostalCode",
    "signUpPhoneNumber",
    "signUpPassword",
    "signUpPasswordCheck",
    "loginConfirmation"
  ],

  h2: ["h2"],
  signUpEmail: ["signUpEmail"],
  signUpFirstName: ["signUpFirstName"],
  signUpLastName: ["signUpLastName"],
  signUpLastName2: ["signUpLastName2"],
  signUpDateOfBirth: ["signUpDateOfBirth"],
  signUpPostalCode: ["signUpPostalCode"],
  signUpPhoneNumber: ["signUpPhoneNumber"],
  signUpPassword: ["signUpPassword"],
  signUpPasswordCheck: ["signUpPasswordCheck"],
  loginConfirmation: ["loginConfirmation"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicSignUpEb__ArgProps,
      internalVariantPropNames: PlasmicSignUpEb__VariantProps
    });

    return PlasmicSignUpEb__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSignUpEb";
  } else {
    func.displayName = `PlasmicSignUpEb.${nodeName}`;
  }
  return func;
}

export const PlasmicSignUpEb = Object.assign(
  // Top-level PlasmicSignUpEb renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    mainSection: makeNodeComponent("mainSection"),
    loginLink: makeNodeComponent("loginLink"),
    pageBanner: makeNodeComponent("pageBanner"),
    mainSection2: makeNodeComponent("mainSection2"),
    container4: makeNodeComponent("container4"),
    h2: makeNodeComponent("h2"),
    signUpEmail: makeNodeComponent("signUpEmail"),
    signUpFirstName: makeNodeComponent("signUpFirstName"),
    signUpLastName: makeNodeComponent("signUpLastName"),
    signUpLastName2: makeNodeComponent("signUpLastName2"),
    signUpDateOfBirth: makeNodeComponent("signUpDateOfBirth"),
    signUpPostalCode: makeNodeComponent("signUpPostalCode"),
    signUpPhoneNumber: makeNodeComponent("signUpPhoneNumber"),
    signUpPassword: makeNodeComponent("signUpPassword"),
    signUpPasswordCheck: makeNodeComponent("signUpPasswordCheck"),
    loginConfirmation: makeNodeComponent("loginConfirmation"),
    // Metadata about props expected for PlasmicSignUpEb
    internalVariantProps: PlasmicSignUpEb__VariantProps,
    internalArgProps: PlasmicSignUpEb__ArgProps
  }
);

export default PlasmicSignUpEb;
/* prettier-ignore-end */
